_________________________________ C# ________________________________

using System;
using System.Collections.Generic;
using System.IO;
abstract class Book
{
    
    protected String title;
    protected  String author;
    
    public Book(String t,String a){
        title=t;
        author=a;
    }
    public abstract void display();


}

//Write MyBook class
class MyBook: Book
{
    private int price;

    public MyBook(String title, String author, int price): base(title, author)
    {this.price = price;}

    public override void display()
    {
        Console.WriteLine("Title: " + title + "\nAuthor: " + author + "\nPrice: " + price); 
    }
}

class Solution {
    static void Main(String[] args) {
      String title=Console.ReadLine();
      String author=Console.ReadLine();
      int price=Int32.Parse(Console.ReadLine());
      Book new_novel=new MyBook(title,author,price);
      new_novel.display();
    }
}

________________________ Pyhon 3 ______________________________
from abc import ABCMeta, abstractmethod
class Book(object, metaclass=ABCMeta):
    def __init__(self,title,author):
        self.title=title
        self.author=author   
    @abstractmethod
    def display(): pass

#Write MyBook class
class MyBook(Book):
    def __init__(self, title, author, price):
        self.title=title
        self.author=author 
        self.price = price

    def display(self):
        #print ("Title: " + title + "\nAuthor: " + author + "\nPrice: " + price); 
        print ("Title: " + title + "\nAuthor: " + author + "\nPrice:", price); 

title=input()
author=input()
price=int(input())
new_novel=MyBook(title,author,price)
new_novel.display()
